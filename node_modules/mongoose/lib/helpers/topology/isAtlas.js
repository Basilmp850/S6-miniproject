'use strict';

const getConstructorName = require('../getConstructorName');

<<<<<<< HEAD
/**
 * @typedef { import('mongodb').TopologyDescription } TopologyDescription
 */

/**
 * Checks if topologyDescription contains servers connected to an atlas instance
 *
 * @param  {TopologyDescription} topologyDescription
 * @returns {boolean}
 */
=======
>>>>>>> b7209b44fd93f0f081d89d600d98af8cf6d89c17
module.exports = function isAtlas(topologyDescription) {
  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {
    return false;
  }

<<<<<<< HEAD
  if (topologyDescription.servers.size === 0) {
    return false;
  }

  for (const server of topologyDescription.servers.values()) {
    if (server.host.endsWith('.mongodb.net') === false || server.port !== 27017) {
      return false;
    }
  }

=======
  const hostnames = Array.from(topologyDescription.servers.keys());

  if (hostnames.length === 0) {
    return false;
  }

  for (let i = 0, il = hostnames.length; i < il; ++i) {
    const url = new URL(hostnames[i]);
    if (
      url.hostname.endsWith('.mongodb.net') === false ||
      url.port !== '27017'
    ) {
      return false;
    }
  }
>>>>>>> b7209b44fd93f0f081d89d600d98af8cf6d89c17
  return true;
};
